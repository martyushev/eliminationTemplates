Collection of state-of-the-art Julia solvers for minimal problems in geometric computer vision


If you use this code, please cite the following work:

@article{martyushev2023automatic,
  title={Automatic Solver Generator for Systems of Laurent Polynomial Equations},
  author={Martyushev, Evgeniy and Bhayani, Snehal and Pajdla, Tomas},
  journal={https://arxiv.org/abs/2307.00320},
  year={2023}
}


E-mail: martiushevev@susu.ru
Project page: https://github.com/martyushev/eliminationTemplates


Tested on Julia 1.11.3


How to use:

1) Run Julia and type:
 julia> include("/path/to/solvers.julia/prob/test_num_prob.jl")


Folders:

1) _common: help functions common to multiple problems
2) prob: problem folder containing 4 jl-files:
 2.1) inidata_num_prob: generates random initial data
 2.2) coefs_prob: computes initial Macaulay (coefficient) matrix (C) and monomial vector (U)
 2.3) test_num_prob: evaluates speed, numerical accuracy, fail rate, etc.
 2.4) red_mxn(_colpiv)_prob: solver created by redundantAG (m x n - template size, colpiv - if column-pivoting strategy used)